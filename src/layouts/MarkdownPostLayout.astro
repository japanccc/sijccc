---
import StudentLayout from "./StudentLayout.astro";
const { frontmatter } = Astro.props;
const { title, description, ogImage, canonicalURL } = frontmatter;
import heroimage from "../assets/images/cities-hero-bg.jpg";
import defaultBackgroundLines from "../assets/images/vertical-line-bg-small.svg";

const pageType = "si";
---

<StudentLayout
  title={title}
  description={description}
  ogImage={ogImage}
  canonicalURL={canonicalURL}
>
  <section
    class={`ipad-top-space-margin bg-cornflower-blue cover-background one-fifth-screen d-flex align-items-center" style="background-image: url(${heroimage.src});`}
  >
    <div
      class="background-position-center-top h-100 w-100 position-absolute left-0px top-0"
      style="background-image: url('/assets/images/vertical-line-bg-small.svg')"
    >
    </div>
    <div
      id="particles-style-01"
      class="h-100 position-absolute left-0px top-0 w-100"
      data-particle="true"
      data-particle-options='{"particles": {"number": {"value": 12,"density": {"enable": true,"value_area": 2000}},"color": {"value": ["#d5d52b", "#d5d52b", "#d5d52b", "#d5d52b", "#d5d52b"]},"shape": {"type": "circle","stroke":{"width":0,"color":"#000000"}},"opacity": {"value": 1,"random": false,"anim": {"enable": false,"speed": 1,"sync": false}},"size": {"value": 8,"random": true,"anim": {"enable": false,"sync": true}},"line_linked":{"enable":false,"distance":0,"color":"#ffffff","opacity":1,"width":1},"move": {"enable": true,"speed":1,"direction": "right","random": false,"straight": false}},"interactivity": {"detect_on": "canvas","events": {"onhover": {"enable": false,"mode": "repulse"},"onclick": {"enable": false,"mode": "push"},"resize": true}},"retina_detect": false}'
    >
      <canvas
        class="particles-js-canvas-el"
        style="width: 100%; height: 100%;"
        width="1574"
        height="900"></canvas>
    </div>
    <div class="opacity-light bg-dark-gray"></div>
    <div class="container">
      <div class="row justify-content-center">
        <div
          class="col-lg-10 position-relative appear anime-child anime-complete"
          data-anime='{ "el": "childs", "opacity": [0, 1], "translateX": [50, 0], "staggervalue": 100, "easing": "easeOutQuad" }'
        >
          <div class="d-inline-block mt-20 mb-10px sm-mb-25px" style="">
            <span class="text-white fs-18 opacity-5">
              <a href="demo-elearning-blog.html" class="text-white"
                >{frontmatter.pubDate.toString().slice(0, 10)}
              </a>
              <span class="d-inline-block fs-24 align-top ms-10px me-10px"
                >â€¢</span
              >
              <a href="demo-elearning-blog.html" class="text-white"
                >{frontmatter.tags[0]}</a
              >
            </span>
          </div>
          <h1
            class="text-white w-60 lg-w-80 md-w-70 sm-w-100 fw-500 ls-minus-2px text-white alt-font mb-30px overflow-hidden mb-0"
            style=""
          >
            {frontmatter.title}
          </h1>
          <div class="text-white fs-18 mt-40px" style="">
            <img
              class="w-80px h-80px rounded-circle me-15px"
              src="images/avtar-24.jpg"
              alt=""
              data-no-retina=""
            />
            <a href="#" class="text-white text-decoration-line-bottom"
              >{frontmatter.author}</a
            >
          </div>
        </div>
      </div>
    </div>
  </section>
  <section class="pb-0">
    <div class="container">
      <div class="row justify-content-center">
        <div class="prose col-lg-10 mb-6 sm-mb-35px fs-20 lh-40">
          <slot />
        </div>
        <img
          src={frontmatter.image.url}
          width="300"
          alt={frontmatter.image.alt}
        />
      </div>
    </div>
  </section>
</StudentLayout>

<style>
  .row .prose p {
    font-size: 1rem !important;
    line-height: 1.5rem !important;
  }
  h1 {
    line-height: 5rem !important;
  }
</style>

<script>
  // You'll need to include your counter and animation scripts here
  // This is where you would initialize the particles.js and counter animations
  document.addEventListener("DOMContentLoaded", function () {
    // Initialize counter animations
    if (typeof window.initCounters === "function") {
      window.initCounters();
    }

    // Initialize particles
    if (typeof window.initParticles === "function") {
      window.initParticles();
    }

    // Initialize Atropos 3D hover effect
    if (typeof window.Atropos !== "undefined") {
      const elements = document.querySelectorAll("[data-atropos]");
      if (elements.length) {
        elements.forEach((element) => {
          window.Atropos({
            el: element,
            activeOffset: 40,
            shadowScale: 1.05,
          });
        });
      }
    }
  });
</script>
